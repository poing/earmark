name: PHP Composer

on:
  push:
    branches: [ "0.2.0" ]
  pull_request:
    branches: [ "0.2.0" ]

#permissions:
#  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

#    services:
#      mysql:
#        image: mysql:latest
#        env:
#          MYSQL_ALLOW_EMPTY_PASSWORD: false
#          MYSQL_ROOT_PASSWORD: password
#          MYSQL_DATABASE: laravel
#        ports:
#          - 3306/tcp
#        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
#
#      redis:
#        image: redis
#        ports:
#          - 6379/tcp
#        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v3    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 7.2

    - name: Create SQLite database
      run: |
        mkdir -p database
        touch database/database.sqlite

    - name: Validate composer.json and composer.lock
      # run: composer validate --strict
      run: composer validate

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    # Add a test script to composer.json, for instance: "test": "vendor/bin/phpunit"
    # Docs: https://getcomposer.org/doc/articles/scripts.md

    # - name: Run test suite
    #   run: composer run-script test
    
    - name: Unit Testing
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      #run: mkdir -p build/logs
      run: vendor/bin/phpunit --verbose --coverage-clover build/logs/clover.xml
